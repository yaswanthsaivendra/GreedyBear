openapi: 3.0.1
info:
  title: GreedyBear
  license:
    name: MIT
    url: https://github.com/honeynet/GreedyBear/blob/main/FEEDS_LICENSE.md
  version: 0.1.3
tags:
- name: feeds
  description: These feeds are generated from extracted data of attacks detected by TPOTs.
paths:
  /api/feeds/{feed_type}/{attack_type}/{age}.{format}:
    get:
      tags:
      - feeds
      summary: Get the feeds data
      description: Returns the feeds(it will be updated regularly every 10 mins)
      operationId: getFeeds
      parameters:
      - name: feed_type
        in: path
        required: true
        schema:
          type: string
          enum: [log4j, cowrie, all]
        description: >
          "The available feed_type are:
           * `log4j` - attacks detected from the Log4pot
           * `cowrie` - attacks detected from the Cowrie Honeypot
           * `all` - get all types at once"
      - name: attack_type
        in: path
        required: true
        schema:
          type: string
          enum: [scanner, payload_request, all]
        description: >
          "The available attack_type are:
           * `scanner` - IP addresses captured by the honeypots while performing attacks
           * `payload_request` - IP addresses and domains extracted from payloads that would have been executed after a speficic attack would have been successful.
           * `all` - get all types at once"
      - name: age
        in: path
        required: true
        schema:
          type: string
          enum: [recent, persistent]
        description: >
          "The available age are:
           * `recent` - most recent IOCs seen in the last 3 days
           * `persistent` - these IOCs are the ones that were seen regularly by the honeypots. This feeds will start empty once no prior data was collected and will become bigger over time."
      - name: format
        in: path
        required: true
        schema:
          type: string
          enum: [json, txt, csv]
        description: >
          "The available format are:
           * `txt` - plain text (just one line for each IOC)
           * `csv` - CSV-like file (just one line for each IOC)
           * `json` - JSON file with additional information regarding the IOCs"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/feeds'
            text/csv:
              schema:
                type: string
                description: |
                  CSV-like file consists of IPV4 addresses detected by honeypots

                  (just one line for each IOC)
                format: ipv4
                example: |
                  198.51.100.42
                  197.56.200.22
                  124.26.98.34
            text/plain:
              schema:
                type: string
                description: |
                  plain text of IPV4 addresses detected by honeypots

                  (just one line for each IOC)
                format: ipv4
                example: |
                  198.51.100.42
                  197.56.200.22
                  124.26.98.34
        400:
          description: Invalid Input supplied
          content: {}
        404:
          description: Not found
          content: {}
  /api/enrichment:
    get:
      tags:
      - feeds
      summary: Get data about a specific IOC
      description: Query for a specific observable in database and return data about it.
      parameters:
        - in: query
          name: query
          schema:
            type: string
            format: ipv4|domain
          required: true
          description: >
            "Query for an observable_name. The observable_name can be:
             * An valid `IP` or `domain`"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/feed-enrichment'
        400:
          description: Observable IP does not pass the regex check
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/feed-enrichment-InvalidRegexCheck'
components:
  schemas:
    feeds:
      type: object
      properties:
        license:
          type: string
          default: https://github.com/honeynet/GreedyBear/blob/main/FEEDS_LICENSE.md
        iocs:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
                format: ipv4
              scanner:
                type: boolean
              payload_request:
                type: boolean
              first_seen:
                type: string
                format: date
              last_seen:
                type: string
                format: date
              times_seen:
                type: integer
                example: 1
    feed-enrichment:
      type: object
      properties:
        found:
          type: boolean
        ioc:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
              format: ipv4
            type:
              type: string
            first_seen:
              type: string
              format: date-time
            last_seen:
              type: string
              format: date-time
            days_seen:
              type: array
              items:
                type: string
                format: date
            number_of_days_seen:
              type: integer
              example: 1
            times_seen:
              type: integer
              example: 1
            log4j:
              type: boolean
            cowrie:
              type: boolean
            scanner:
              type: boolean
            payload_request:
              type: boolean
            related_ioc:
              type: array
              items:
                type: string
        query:
          type: string
          format: ipv4
    feed-enrichment-InvalidRegexCheck:
      type: object
      properties:
        non_field_errors:
          type: array
          items:
            type: string
            default: Observable is not a valid IP or domain